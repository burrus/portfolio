{"version":3,"file":"js/926.1ea296e8.js","mappings":"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","sources":["webpack://portfolio/./src/views/Contact.vue","webpack://portfolio/./node_modules/emailjs-com/es/store/store.js","webpack://portfolio/./node_modules/emailjs-com/es/methods/init/init.js","webpack://portfolio/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://portfolio/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://portfolio/./node_modules/emailjs-com/es/api/sendPost.js","webpack://portfolio/./node_modules/emailjs-com/es/methods/send/send.js","webpack://portfolio/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://portfolio/./node_modules/emailjs-com/es/index.js","webpack://portfolio/src/views/Contact.vue","webpack://portfolio/./src/views/Contact.vue?f36f","webpack://portfolio/./src/views/Contact.vue?45f3"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"contact\"},[_c('Header',{attrs:{\"showBackButton\":true}}),_c('div',{staticClass:\"form-content\"},[_c('form',{attrs:{\"id\":\"contact\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.sendEmail.apply(null, arguments)}}},[_c('div',{staticClass:\"fields\"},[_c('h3',[_vm._v(\"What's on your mind?\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.name),expression:\"name\"}],attrs:{\"type\":\"text\",\"name\":\"name\",\"placeholder\":\"Name\"},domProps:{\"value\":(_vm.name)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.name=$event.target.value},_vm.validateForm]}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"type\":\"email\",\"name\":\"email\",\"placeholder\":\"Email address\"},domProps:{\"value\":(_vm.email)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.email=$event.target.value},_vm.validateForm]}}),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.message),expression:\"message\"}],attrs:{\"name\":\"message\",\"rows\":\"7\",\"placeholder\":\"Message\"},domProps:{\"value\":(_vm.message)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.message=$event.target.value},_vm.validateForm]}}),_c('input',{attrs:{\"type\":\"submit\",\"value\":\"Send\",\"disabled\":!_vm.isValidForm}})])])]),_c('Footer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","<template>\n    <div class=\"contact\">\n        <Header :showBackButton=\"true\" />\n        <div class=\"form-content\">\n            <form id=\"contact\" @submit.prevent=\"sendEmail\">\n                <div class=\"fields\">\n                    <h3>What's on your mind?</h3>\n                    <input\n                        @input=\"validateForm\"\n                        type=\"text\"\n                        v-model=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                    />\n                    <input\n                        @input=\"validateForm\"\n                        type=\"email\"\n                        v-model=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email address\"\n                    />\n                    <textarea\n                        @input=\"validateForm\"\n                        v-model=\"message\"\n                        name=\"message\"\n                        rows=\"7\"\n                        placeholder=\"Message\"\n                    ></textarea>\n                    <input type=\"submit\" value=\"Send\" :disabled=\"!isValidForm\" />\n                </div>\n            </form>\n        </div>\n        <Footer />\n    </div>\n</template>\n\n<script>\nimport emailjs from \"emailjs-com\"\nimport Footer from \"@/components/Footer.vue\"\nimport Header from \"@/components/Header.vue\"\n\nexport default {\n    name: \"Contact\",\n    components: {\n        Footer,\n        Header,\n    },\n    data() {\n        return {\n            name: null,\n            email: null,\n            message: null,\n            isValidForm: false,\n        }\n    },\n    methods: {\n        sendEmail(e) {\n            try {\n                emailjs.sendForm(process.env.VUE_APP_ZOHO_SERVICE_ID, process.env.VUE_APP_ZOHO_TEMPLATE_ID, e.target, process.env.VUE_APP_ZOHO_USER_ID, {\n                    name: this.name,\n                    email: this.email,\n                    message: this.message,\n                })\n\n                this.name = null\n                this.email = null\n                this.message = null\n                this.isValidForm = false\n\n                alert(\"Your message has been sent!\")\n            } catch (error) {\n                alert(error)\n            }\n        },\n        validateForm() {\n            if (!this.name || !this.message) {\n                this.isValidForm = false\n                return\n            }\n\n            var regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n            if (regex.test(this.email)) {\n                this.isValidForm = true\n            } else {\n                this.isValidForm = false\n            }\n        },\n    },\n}\n</script>\n\n<style scoped>\n.form-content {\n  display: flex;\n  justify-content: space-between;\n}\n\n.contact,\n.fields {\n    display: flex;\n}\n\n.contact {\n    flex-direction: column;\n    height: 100vh;\n    justify-content: space-between;\n}\n\n.fields {\n    flex-direction: column;\n    margin: 0 auto;\n    width: 90vw;\n}\n\nform {\n    margin: 0 auto;\n}\n\nh3 {\n    color: black;\n    margin-bottom: 30px;\n}\n\ninput,\ntextarea {\n    background-color: #f2f2f2;\n    border: none;\n    margin-bottom: 10px;\n    padding-left: 20px;\n}\n\ninput,\ninput::placeholder,\ntextarea,\ntextarea::placeholder {\n    font-family: \"Roboto Mono\", sans-serif;\n}\n\ninput {\n    height: 50px;\n}\n\ntextarea {\n    padding-top: 20px;\n    resize: vertical;\n}\n\ninput[type=\"submit\"] {\n    background-color: #27ae60;\n    color: white;\n    font-size: 1.1em;\n    font-weight: 600;\n    -webkit-appearance: none;\n}\n\ninput[type=\"submit\"]:disabled {\n    background-color: #f2f2f2;\n    color: #999;\n}\n\n@media only screen and (min-width: 600px) {\n    .fields {\n        margin: 0;\n        width: 60vw;\n    }\n}\n\n@media only screen and (min-width: 1000px) {\n    .fields {\n        width: 40vw;\n    }\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Contact.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Contact.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Contact.vue?vue&type=template&id=666affdb&scoped=true\"\nimport script from \"./Contact.vue?vue&type=script&lang=js\"\nexport * from \"./Contact.vue?vue&type=script&lang=js\"\nimport style0 from \"./Contact.vue?vue&type=style&index=0&id=666affdb&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"666affdb\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","$event","preventDefault","sendEmail","apply","arguments","_v","directives","name","rawName","value","expression","domProps","target","composing","validateForm","email","message","isValidForm","staticRenderFns","store","_origin","init","userID","origin","_userID","validateParams","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","findHTMLForm","form","currentForm","document","querySelector","nodeName","sendForm","formData","FormData","append","components","Footer","Header","methods","e","emailjs","process","alert","error","regex","test","component"],"sourceRoot":""}